PART
{
	name = rn_centaurt_mb
	module = Part
	author = Raidernick

	// --- asset parameters ---
	MODEL
	{
		model = RN_US_Rockets/TitanIV/centaurt_mb
		scale = 0.80, 0.80, 0.80
	}
	rescaleFactor = 1.0
	scale = 0.80
	
	
	node_stack_top = 0.0, 2.58852, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -3.18591, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_eng1 = -0.76094, -3.18929, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_eng2 = 0.76094, -3.18929, 0.0, 0.0, -1.0, 0.0, 1
	
	//stackSymmetry = 1
	TechRequired = advMetalworks
	entryCost = 6000
	cost = 1000
	category = FuelTank
	subcategory = 0
	title = Titan IV Centaur-T Upper Stage
	manufacturer = RN Industries
	description = Centaur T upper stage for the Titan IV rocket.
	attachRules = 1,0,1,1,0
	mass = 6
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000 // = 2900
	bulkheadProfiles = size2, srf
	stageOffset = 1
	childStageOffset = 1
	RESOURCE
	{
		name = LiquidFuel
		amount = 450
		maxAmount = 450
	}
	RESOURCE
	{
		name = Oxidizer
		amount = 550
		maxAmount = 550
	}
	RESOURCE
	{
		name = MonoPropellant
		amount = 150
		maxAmount = 150
	}
	EFFECTS
	{
		running
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = RCSthruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = RCSthruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}
	
	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = False
		thrusterTransformName = RCSthruster
		thrusterPower = 5
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = running
		atmosphereCurve
		{
			key = 0 260
			key = 1 100
			key = 4 0.001
		}
	}
	//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = lh2_tank,ss_tank_top

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}
